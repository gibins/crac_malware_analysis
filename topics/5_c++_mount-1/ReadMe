Question: SOC analyst says that mount bind happening willy nilly is a red flag.
            Is there something that we do about it?
Answer: Mount bind + chroot is rather popular combination.

Exercise: Implement the above. Write something in a critical path, using mount bind + chroot approach.

Step 1: Make the mount bind, exposing desired target path via alternate path.
Step 2: Prepare minimal root
Step 3: Change root to whatever path we used in step (2)
Step 4: Do file I/O from within the chroot.

We need to create one more process. Basically, some sort of fork of our own process which goes inside chroot,
and does stuff.

Reason: Chroot behaves like a jail. Once we are in, we cannot come out without too much pain.

Step (3) and step (4) will be done via child process, while parent process waits for everything to be done
before doing cleanup.

---------------------

Topic: persistence

    -> Because we want to be able to retain access across reboots
    -> Without being too noisy
    -> With some reliability

Possible options?

    1. Write startup script (/etc/init.d/ or something similar)
    2. Cronjobs
    3. crontab file
    4. Bashrc
    5. Systemd service
    6. Systemd timer
    7. /etc/ld.so.preload

    Problem: different distributions and their versions may have these files at slightly different locations.

    crontab -l
    <add own entry>
    pipe whole thing to "crontab -"

Systemd Service Unit
--------------------

[Unit]
Description=This is very important service unit.
After=network.service

[Service]
ExecStart=/tmp/tmp.lwxERYqBga/cmake-build-debug-remote/server
KillMode=process
Restart=on-failure

[Install]
WantedBy=multi-user.target

------------------------

systemctl daemon-reload
systemctl enable <service name>