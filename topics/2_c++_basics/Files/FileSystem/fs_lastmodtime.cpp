#include <iostream>
#include <filesystem>
#include <chrono>
#include <ctime>
#include <time.h>   

namespace fs = std::filesystem;
// using namespace std::chrono_literals;
using namespace std::chrono;

int main()
{
   
    //fs::path pathToShow("/");
    //auto p = std::filesystem::temp_directory_path() / "example.bin";

    fs::path pathToShow("Sample.txt");
    auto p = std::filesystem::absolute("Sample.txt");

    std::filesystem::file_time_type timeEntry = fs::last_write_time(p);
    std::cout<<"Last modified time : "<<&timeEntry<<std::endl;
    //time_t ftime = std::file_time_type::clock::to_time_t(fs::last_write_time("/Path/filename"))
    //time_t ftime = std::file_time_type::to_time_t(timeEntry);
    time (&timeEntry);
    std::cout<< std::ctime(timeEntry);
    //std::cout<<"Time Since Epoch "<<timeEntry.time_since_epoch();   
    //std::cout<<"Time Since Epoch "<<timeEntry;   
    
    auto const now = std::chrono::system_clock::now();
    //std::cout<<now;
    time_t cftime = std::chrono::system_clock::to_time_t(now);
    std::cout << std::asctime(std::localtime(&cftime));

    std::cout<<"================================="<<std::endl;
//std::chrono::clock_cast<std::chrono::system_clock>(timeEntry);
std::cout << std::asctime(std::localtime(&cftime));

   const auto fileTime = std::filesystem::last_write_time(p);
//const auto systemTime = std::chrono::clock_cast<std::chrono::system_clock>(fileTime);
//const auto time = std::chrono::system_clock::to_time_t(systemTime);
    
    
    
    
        return 0;
}
