#include <iostream>
#include "3rdparty/cpp-httplib/httplib.h"
#include <string>
int main()
{

    std::cout << "Started Testing" << std::endl;
    httplib::Client client("http://localhost:8080");

    // infinite loop
    std::string server_address = "http://localhost:8080";
    std::string api_endpoint="";
    std::string request_data;
    // auto responce_data;
    while (true)
    {
        std::cout << "...." << std::endl;
        if (api_endpoint == "")
        {
            std::cout << "Enter API Endpoint" << std::endl;
            // std::cin >> api_endpoint;
            std::getline(std::cin, api_endpoint);
        }
        std::cout << "Enter Request data" << std::endl;
        std::getline(std::cin, request_data);
        // Add user input validation

        std::cout << "Connecting API URL : " << server_address + api_endpoint << std::endl;

        if (client.is_socket_open() || client.is_valid())

        {
            /*auto responce_data = client.Get(api_endpoint,request_data);
            std::cout << "Get Request Response from Server" << std::endl;
            std::cout << responce_data->status << std::endl;
            std::cout << responce_data->body << std::endl;*/

            auto responce_data = client.Post(api_endpoint, request_data, "text/plain");
            std::cout << "Post Request Response from Server" << std::endl;
            std::cout << responce_data->status << std::endl;
            std::cout << responce_data->body << std::endl;
        }
        else
        {
            std::cout << "Error connecting server " << server_address << std::endl;
        }

        /// Class code

        bool isOutputCaptured = false;
        auto responce_data = client.Get(api_endpoint);
        auto output = responce_data->body;
        int timeout = 5;
        if (output.empty())
        {
            for (int i = 0; i < timeout; i++)
            {
                sleep(1);
            }
        }
    }
    return 0;
}