#include <errno.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <filesystem>

enum OSType
{
    none,
    centos,
    ubuntu,
    arch
};

/*size_t executeCommand(const char* command, char* output, size_t size)
{
    char buffer[255];
    memset(buffer, 0, 255);
    if (output != NULL)
    {
        memset(output, 0, size);
    }
    strncat(buffer, command, strlen(command));
    strncat(buffer, " 2>&1", 6);

    FILE* fp = popen(buffer, "r");

    if (fp == NULL)
    {
        return 0;
    }

    size_t bytes = 0;

    if (output != NULL)
    {
        bytes = fread((char*)output, 1, size, fp);
    }
    pclose(fp);
    return bytes;
}*/

/*OSType detectOS()
{
    char command[] = "cat /etc/os-release | grep \"^ID=\" | awk -F '=' '{print $2}' | sed 's/\"//g'";
    char output[50];

    if (executeCommand(command, output, 50) != 0)
    {
        if (strncmp("centos", output, 6) == 0)
        {
            return centos;
        }
        else if (strncmp("ubuntu", output, 6) == 0)
        {
            return ubuntu;
        }
        else if (strncmp("arch", output, 4) == 0)
        {
            return arch;
        }
        else
        {
            return none;
        }
    }
}*/
bool isPersistent(char* bin)
{
    unsigned int persist = 0;
    char command[255];
    memset(command, 0, 255);

    strncat(command, "crontab -l | grep \"", 20);
    strncat(command, bin, strlen(bin));
    strncat(command, "\"", 2);

    //char output = (char) malloc(8192);
     char *output = malloc(8192);
    /*if (executeCommand(command, output, 8192) != 0)
    {
        printf("OUTPUT: %s\n", output);
        return true;
    }*/

    return false;
}

void installPersistence(char *bin)
{
    if (isPersistent(bin))
        return;

    char command[1000];
    memset(command, 0, 1000);
    strncat(command, "(crontab -l; echo \"@reboot    ", 32);
    strncat(command, bin, strlen(bin));
    strncat(command, "\") | crontab -", 15);

    //executeCommand(command, NULL, 0);
}

int main()
{
    installPersistence("/tmp/tmp.lwxERYqBga/cmake-build-debug-remote/server");

    //auto os = detectOS();

    /*if (os == OSType::ubuntu)
    {
        std::cout << "Ubuntu this is!" << std::endl;
        // write into systemd service unit here
        /*
         * Service unit path: /lib/systemd/system/magic.service
         */
   // }

    return 0;
}